{"version":3,"sources":["services/dbInteraction.js","components/Delete.js","components/Numbers.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","dbInteraction","getAll","console","log","axios","get","then","response","data","create","newObject","fn","post","name","setTimeout","update","id","put","delete","findID","number","undefined","filter","person","i","Delete","props","onClick","window","confirm","result","persons","Numbers","map","indexOf","className","Notification","message","App","useState","setPersons","useEffect","initialPeople","errorMessage","setErrorMessage","newName","setNewName","newNum","setNewNum","setFilter","value","onChange","e","target","type","preventDefault","personObj","obj","length","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d079461a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons' \r\nconst dbInteraction = {\r\n    getAll: () => {\r\n        console.log('attempting to get .....')\r\n        const request = axios.get(baseUrl)\r\n        return request.then(response => response.data)\r\n      },\r\n    create: (newObject, fn) => {\r\n        axios.post(baseUrl, newObject)\r\n        fn(`${newObject.name} has been added to the phone list`)\r\n        setTimeout(() => {\r\n            fn('')\r\n          }, 5000)\r\n      },\r\n    update: (id, newObject) => {\r\n        // put to replace by id\r\n        axios.put(`${baseUrl}/${id}`, newObject)\r\n        //error messaging\r\n        \r\n    },\r\n    delete: (id) => {\r\n        axios.delete(`${baseUrl}/${id}`)\r\n    },\r\n    findID: (name, number, fn) => {\r\n        const request = axios.get(baseUrl)\r\n        return request.then(response => {\r\n            if(response === undefined) {\r\n                fn(`${name}'s data is missing from the server`)\r\n                return\r\n            } else {\r\n                return((response.data.filter((person, i) => (person.name === name) || (person.number === number)))[0].id)\r\n            }\r\n        })\r\n    }\r\n}\r\nexport default dbInteraction","import dbInteraction from \"../services/dbInteraction\"\r\nimport React from \"react\"\r\nconst Delete = (props) => {\r\n    const click = () => {\r\n        if(window.confirm(`Delete ${props.person.name}?`)) {\r\n            dbInteraction.delete(props.id)\r\n            let result = props.persons.filter((person, i) => person.id !== props.id)\r\n            props.delete(result)\r\n        }\r\n        else {\r\n            return\r\n        }\r\n    }\r\n    return (\r\n        <button onClick={click}>delete</button>\r\n    )\r\n}\r\nexport default Delete","\r\nimport Delete from \"./Delete\"\r\nconst Numbers = (props) => {\r\n    // console.log(props.filter)\r\n    return(\r\n        <div>\r\n            <h2>Numbers</h2>\r\n            <ul>{props.persons.map((person, i) => {\r\n                if(person.name.indexOf(props.filter) > -1) return(\r\n                    <li className=\"person\" key={i}>\r\n                        {person.name} {person.number} <Delete person={person} persons={props.persons} id={person.id} delete={props.delete}/>\r\n                    </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Numbers","\r\nconst Notification = ({ message }) => {\r\n    if (message === '') {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  } \r\n  export default Notification","import './App.css';\nimport React, { useState, useEffect } from 'react'\nimport Numbers from './components/Numbers';\nimport dbInteraction from './services/dbInteraction';\nimport Notification from './components/Notification';\n//  Maintain the application's state and all event handlers in the App root component.\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    { name: '', number: '' }\n  ])\n  useEffect(() => {\n    dbInteraction\n      .getAll()\n      .then(initialPeople => {\n        console.log(initialPeople)\n        setPersons(initialPeople)\n      })\n  }, [])\n  const [errorMessage, setErrorMessage] = useState('')\n  const [ newName, setNewName ] = useState('')\n  const [ newNum, setNewNum ] = useState(0)\n  const [ filter, setFilter ] = useState('')\n  const nameInput = (e) => {\n    setNewName(e.target.value)\n  }\n  const numInput = (e) => {\n    setNewNum(e.target.value)\n  }\n  const filterInput = (e) => {\n    setFilter(e.target.value)\n  }\n  const handleButton = (e) => {\n    e.preventDefault()\n    const personObj = {\n      name: newName,\n      number: newNum\n    }\n    // LOGIC IS SOUND. filter returns an array and we grab the length of it and see if its greater than 0\n    // filter returns an array based off of its input, obj is each object of the array\n    // it compares the name key with the newName variable we get from the input tag\n    // if it finds a match, it returns a value, thus array is greater than 0\n    if((persons.filter(obj => obj.name === newName)).length > 0) {\n      if(window.confirm(`${newName} is already in the phone book, would you like to replace the old number with a new one?`)) {\n        dbInteraction.findID(newName, newNum, setErrorMessage)\n          .then(id => {\n            dbInteraction.update(id, personObj)\n            setPersons(persons.map(person => person.name === newName ? personObj : person))\n          })\n        // dbInteraction.update()\n      }\n      setNewName('')\n      setNewNum(0)\n    }\n    else {\n      dbInteraction.create(personObj, setErrorMessage)\n      setPersons(persons.concat(personObj))\n      setNewName('')\n      setNewNum(0)\n    }\n    \n  }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <div>\n          <p>\n              filter shown with a <input value={filter} onChange={filterInput} />\n          </p>\n        </div>\n      <form>\n        <div>\n          name: <input value={newName} onChange={nameInput}/>\n        </div>\n        <div>\n          number: <input value={newNum} onChange={numInput}/>\n        </div>\n        <div>\n          <button type=\"submit\" onClick={handleButton}>add</button>\n        </div>\n      </form>\n      <Numbers persons={persons} filter={filter} delete={setPersons}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}